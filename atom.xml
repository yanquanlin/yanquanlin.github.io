<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>YQL&#39;blog</title>
  <icon>https://www.gravatar.com/avatar/2e782e8b2b510fe1a8abe19f7cab05aa</icon>
  <subtitle>acm(jb)er</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-01-27T13:06:56.572Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Quanlin Yan</name>
    <email>yanquanlin@outlook.com#��ϵ����</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>acm模板</title>
    <link href="http://yoursite.com/2019/01/27/acm%E6%A8%A1%E6%9D%BF/"/>
    <id>http://yoursite.com/2019/01/27/acm模板/</id>
    <published>2019-01-27T12:31:50.000Z</published>
    <updated>2019-01-27T13:06:56.572Z</updated>
    
    <content type="html"><![CDATA[<h2 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h2><h3 id="线段树"><a href="#线段树" class="headerlink" title="线段树"></a>线段树</h3><h4 id="线段树的单点修改"><a href="#线段树的单点修改" class="headerlink" title="线段树的单点修改"></a>线段树的单点修改</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">const int maxn=1e6+5;</span><br><span class="line">int a[maxn];    //存每个数的值</span><br><span class="line">struct node</span><br><span class="line">&#123;</span><br><span class="line">    int sum;</span><br><span class="line">    int ll,rr;</span><br><span class="line">&#125;tree[maxn*4];</span><br><span class="line"></span><br><span class="line">void Pushup(int id)       //区间合并</span><br><span class="line">&#123;</span><br><span class="line">    tree[id].sum=tree[id*2].sum+tree[id*2+1].sum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void Pushdown()     //区间下放，进行区间修改的时候用到</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void Build(int id,int ll,int rr)        //建树</span><br><span class="line">&#123;</span><br><span class="line">    tree[id].ll=ll;</span><br><span class="line">    tree[id].rr=rr;</span><br><span class="line">    if(ll==rr)</span><br><span class="line">    &#123;</span><br><span class="line">        tree[id].sum=a[ll];</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line">    int mid=(ll+rr)/2;</span><br><span class="line">    //mid=ll+rr&gt;&gt;1;</span><br><span class="line">    Build(id*2,ll,mid);</span><br><span class="line">    Build(id*2+1,mid+1,rr);</span><br><span class="line">    //Build(id&lt;&lt;1,ll,mid);</span><br><span class="line">    //Build(id&lt;&lt;1|1,mid+1,rr);</span><br><span class="line">    Pushup(id);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void Update(int id,int x,int y)       //修改</span><br><span class="line">&#123;</span><br><span class="line">    if(tree[id].ll==tree[id].rr)</span><br><span class="line">    &#123;</span><br><span class="line">        tree[id].sum=y;</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line">    int mid=(tree[id].ll+tree[id].rr)/2;</span><br><span class="line">    if(x&lt;=mid)</span><br><span class="line">        Update(id*2,x,y);</span><br><span class="line">    else</span><br><span class="line">        Update(id*2+1,x,y);</span><br><span class="line">    Pushup(id);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int Query(int id,int x,int y)        //查询</span><br><span class="line">&#123;</span><br><span class="line">    if(x&lt;=tree[id].ll&amp;&amp;tree[id].rr&lt;=y)//到头的情况</span><br><span class="line">        return tree[id].sum;</span><br><span class="line">    int mid=(tree[id].ll+tree[id].rr)/2;</span><br><span class="line">    if(y&lt;=mid)                  //只需要访问左边</span><br><span class="line">        return Query(id*2,x,y);</span><br><span class="line">    else if(x&gt;=mid+1)</span><br><span class="line">        return Query(id*2+1,x,y);</span><br><span class="line">    else</span><br><span class="line">        return Query(id*2,x,y)+Query(id*2+1,x,y);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="线段树的区间修改"><a href="#线段树的区间修改" class="headerlink" title="线段树的区间修改"></a>线段树的区间修改</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line">const int maxn=1e6+5;</span><br><span class="line">long long int a[maxn];</span><br><span class="line">long long int lazy[maxn*4];    //存每个数的值</span><br><span class="line">struct node</span><br><span class="line">&#123;</span><br><span class="line">long long int sum;</span><br><span class="line">long long int ll,rr;</span><br><span class="line">&#125;tree[maxn*4];</span><br><span class="line">void Pushup(int id)       //区间合并</span><br><span class="line">&#123;</span><br><span class="line">    tree[id].sum=tree[id*2].sum+tree[id*2+1].sum;</span><br><span class="line">&#125;</span><br><span class="line">void Pushdown(int id)     //区间下放，进行区间修改的时候用到</span><br><span class="line">&#123;</span><br><span class="line">    if(lazy[id])</span><br><span class="line">    &#123;</span><br><span class="line">        tree[id*2].sum+=lazy[id]*(tree[id*2].rr-tree[id*2].ll+1);</span><br><span class="line">        tree[id*2+1].sum+=lazy[id]*(tree[id*2+1].rr-tree[id*2+1].ll+1);</span><br><span class="line">        lazy[id*2]+=lazy[id];</span><br><span class="line">        lazy[id*2+1]+=lazy[id];</span><br><span class="line">        lazy[id]=0;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">void Build(int id,int ll,int rr)        //建树</span><br><span class="line">&#123;</span><br><span class="line">    lazy[id]=0;</span><br><span class="line">    tree[id].ll=ll;</span><br><span class="line">    tree[id].rr=rr;</span><br><span class="line">    if(ll==rr)</span><br><span class="line">    &#123;</span><br><span class="line">        tree[id].sum=a[ll];</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line">    int mid=(ll+rr)/2;</span><br><span class="line">    //mid=ll+rr&gt;&gt;1;</span><br><span class="line">    //Build(ltree);</span><br><span class="line">    //Build(rtree);</span><br><span class="line">    Build(id&lt;&lt;1,ll,mid);</span><br><span class="line">    Build(id&lt;&lt;1|1,mid+1,rr);</span><br><span class="line">    Pushup(id);</span><br><span class="line">&#125;</span><br><span class="line">void Update(int id,int x,int y,int z)       //修改</span><br><span class="line">&#123;</span><br><span class="line">    if(x&lt;=tree[id].ll&amp;&amp;tree[id].rr&lt;=y)</span><br><span class="line">    &#123;</span><br><span class="line">        tree[id].sum+=z*(tree[id].rr-tree[id].ll+1);</span><br><span class="line">        lazy[id]+=z;</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line">    int mid=(tree[id].ll+tree[id].rr)/2;</span><br><span class="line">    Pushdown(id);</span><br><span class="line">    if(y&lt;=mid)</span><br><span class="line">        Update(id*2,x,y,z);</span><br><span class="line">    else if(x&gt;=mid+1)</span><br><span class="line">        Update(id*2+1,x,y,z);</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">        Update(id*2,x,y,z);</span><br><span class="line">        Update(id*2+1,x,y,z);</span><br><span class="line">    &#125;</span><br><span class="line">    Pushup(id);</span><br><span class="line">&#125;</span><br><span class="line">long long int Query(int id,int x,int y)        //查询</span><br><span class="line">&#123;</span><br><span class="line">    if(x&lt;=tree[id].ll&amp;&amp;tree[id].rr&lt;=y)//到头的情况</span><br><span class="line">        return tree[id].sum;</span><br><span class="line">    int mid=(tree[id].ll+tree[id].rr)/2;</span><br><span class="line">    Pushdown(id);</span><br><span class="line">    if(y&lt;=mid)                  //只需要访问左边</span><br><span class="line">        return Query(id*2,x,y);</span><br><span class="line">    else if(x&gt;=mid+1)</span><br><span class="line">        return Query(id*2+1,x,y);</span><br><span class="line">    else</span><br><span class="line">        return Query(id*2,x,y)+Query(id*2+1,x,y);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="主席树"><a href="#主席树" class="headerlink" title="主席树"></a>主席树</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;cstdio&gt;</span><br><span class="line">#include &lt;cstring&gt;</span><br><span class="line">#include &lt;algorithm&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">const int N = 100000 + 5;</span><br><span class="line"></span><br><span class="line">int a[N], b[N], rt[N * 20], ls[N * 20], rs[N * 20], sum[N * 20];</span><br><span class="line"></span><br><span class="line">int n, k, tot, sz, ql, qr, x, q, T;</span><br><span class="line"></span><br><span class="line">void Build(int&amp; o, int l, int r)&#123;</span><br><span class="line">    o = ++ tot;</span><br><span class="line">    sum[o] = 0;</span><br><span class="line">    if(l == r) return;</span><br><span class="line">    int m = (l + r) &gt;&gt; 1;</span><br><span class="line">    Build(ls[o], l, m);</span><br><span class="line">    Build(rs[o], m + 1, r);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void update(int&amp; o, int l, int r, int last, int p)&#123;</span><br><span class="line">    o = ++ tot;</span><br><span class="line">    ls[o] = ls[last];</span><br><span class="line">    rs[o] = rs[last];</span><br><span class="line">    sum[o] = sum[last] + 1;</span><br><span class="line">    if(l == r) return;</span><br><span class="line">    int m = (l + r) &gt;&gt; 1;</span><br><span class="line">    if(p &lt;= m)  update(ls[o], l, m, ls[last], p);</span><br><span class="line">    else update(rs[o], m + 1, r, rs[last], p);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int query(int ss, int tt, int l, int r, int k)&#123;</span><br><span class="line">    if(l == r) return l;</span><br><span class="line">    int m = (l + r) &gt;&gt; 1;</span><br><span class="line">    int cnt = sum[ls[tt]] - sum[ls[ss]];</span><br><span class="line">    if(k &lt;= cnt) return query(ls[ss], ls[tt], l, m, k);</span><br><span class="line">    else return query(rs[ss], rs[tt], m + 1, r, k - cnt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void work()&#123;</span><br><span class="line">    scanf(&quot;%d%d%d&quot;, &amp;ql, &amp;qr, &amp;x);</span><br><span class="line">    int ans = query(rt[ql - 1], rt[qr], 1, sz, x);</span><br><span class="line">    printf(&quot;%d\n&quot;, b[ans]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main()&#123;</span><br><span class="line">    scanf(&quot;%d&quot;, &amp;T);</span><br><span class="line">    while(T--)&#123;</span><br><span class="line">        scanf(&quot;%d%d&quot;, &amp;n, &amp;q);</span><br><span class="line">        for(int i = 1; i &lt;= n; i ++) scanf(&quot;%d&quot;, a + i), b[i] = a[i];</span><br><span class="line">        sort(b + 1, b + n + 1);</span><br><span class="line">        sz = unique(b + 1, b + n + 1) - (b + 1);</span><br><span class="line">        tot = 0;</span><br><span class="line">        Build(rt[0],1, sz);</span><br><span class="line">        //for(int i = 0; i &lt;= 4 * n; i ++)printf(&quot;%d,rt =  %d,ls =  %d, rs = %d, sum = %d\n&quot;, i, rt[i], ls[i], rs[i], sum[i]);</span><br><span class="line">        for(int i = 1; i &lt;= n; i ++)a[i] = lower_bound(b + 1, b + sz + 1, a[i]) - b;</span><br><span class="line">        for(int i = 1; i &lt;= n; i ++)update(rt[i], 1, sz, rt[i - 1], a[i]);</span><br><span class="line">        //for(int i = 0; i &lt;= 5 * n; i ++)printf(&quot;%d,rt =  %d,ls =  %d, rs = %d, sum = %d\n&quot;, i, rt[i], ls[i], rs[i], sum[i]);</span><br><span class="line">        while(q --)work();</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="树状数组"><a href="#树状数组" class="headerlink" title="树状数组"></a>树状数组</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">int tree[1000000],n;</span><br><span class="line">int lowbit(int x)</span><br><span class="line">&#123;</span><br><span class="line"> return x&amp;(-x);</span><br><span class="line">&#125;</span><br><span class="line">int Query(int x)//查询x项的前缀和 ； </span><br><span class="line">&#123;</span><br><span class="line"> int res=0;</span><br><span class="line"> while(x)</span><br><span class="line"> &#123;</span><br><span class="line">  res+=tree[x];</span><br><span class="line">  x-=lowbit(x); </span><br><span class="line"> &#125;</span><br><span class="line"> return res;</span><br><span class="line">&#125;</span><br><span class="line">void Add(int x,int v)//在x位加v； </span><br><span class="line">&#123;</span><br><span class="line"> while(x&lt;=n)</span><br><span class="line"> &#123;</span><br><span class="line">  tree[x]+=v;</span><br><span class="line">  x+=lowbit(x);</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line"> int a[100000],x;</span><br><span class="line"> scanf(&quot;%d %d&quot;,&amp;n,&amp;x);</span><br><span class="line"> for(int i=1;i&lt;=n;i++)</span><br><span class="line"> &#123;</span><br><span class="line">  scanf(&quot;%d&quot;,&amp;a[i]);</span><br><span class="line"> &#125;</span><br><span class="line"> for(int i=1;i&lt;=n;i++)</span><br><span class="line"> &#123;</span><br><span class="line">  Add(i,a[i]);//树状数组的预处理，初始化 </span><br><span class="line"> &#125;</span><br><span class="line"> printf(&quot;%d\n&quot;,Query(x));</span><br><span class="line"> return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="st表"><a href="#st表" class="headerlink" title="st表"></a>st表</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">void Init()&#123;</span><br><span class="line"></span><br><span class="line">    for(int i = 0; i &lt; n; i++)</span><br><span class="line">      d[i][0] = a[i];</span><br><span class="line">    for(int j = 1; (1&lt;&lt;j) &lt;= n; j++)</span><br><span class="line">      for(int i = 0; i+(1&lt;&lt;j) &lt;= n; i++)</span><br><span class="line">       d[i][j] = min(d[i][j-1], d[i+(1&lt;&lt;(j-1))][j-1]);</span><br><span class="line">&#125;</span><br><span class="line">int RMQ(int l, int r)&#123;</span><br><span class="line">    int k = 0;</span><br><span class="line">    while((1&lt;&lt;k) &lt;= r-l+1)k++;</span><br><span class="line">    k--;</span><br><span class="line">    return min(d[l][k], d[r-(1&lt;&lt;k)+1][k]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><h3 id="kmp"><a href="#kmp" class="headerlink" title="kmp"></a>kmp</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;cstring&gt;</span><br><span class="line">#include&lt;cstdio&gt;</span><br><span class="line">int n,m,next[100001];</span><br><span class="line">char a[100001],b[100001];</span><br><span class="line">void Getnext()</span><br><span class="line">&#123;</span><br><span class="line">next[0]=-1;</span><br><span class="line">for(int i=1,j=0;i&lt;m;i++,j++)</span><br><span class="line">&#123;</span><br><span class="line">while(j!=-1&amp;&amp;b[i]!=b[j]) j=next[j];</span><br><span class="line">next[i+1]=j+1;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">void KMP()</span><br><span class="line">&#123;</span><br><span class="line">for(int i=0,j=0;i&lt;n;i++,j++)</span><br><span class="line">&#123;</span><br><span class="line">while(j!=-1&amp;&amp;a[i]!=b[j]) j=next[j];</span><br><span class="line">if(j==m-1) printf(&quot;%d\n&quot;,i-j+1);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">scanf(&quot;%s%s&quot;,a,b); //a-&gt;long b-&gt;short</span><br><span class="line">n=strlen(a);m=strlen(b);</span><br><span class="line">Getnext();</span><br><span class="line">KMP();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="ac自动机"><a href="#ac自动机" class="headerlink" title="ac自动机"></a>ac自动机</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;cstring&gt;</span><br><span class="line">#include &lt;cstdio&gt;</span><br><span class="line">#include &lt;queue&gt;</span><br><span class="line">const int N=500005;</span><br><span class="line">int T,n,tot,end[N],fail[N],son[N][26];</span><br><span class="line">char s[N*2];</span><br><span class="line">std::queue&lt;int&gt; Q;</span><br><span class="line">void init(int x)</span><br><span class="line">&#123;</span><br><span class="line">end[x]=0;</span><br><span class="line">for(int i=0;i&lt;26;i++) son[x][i]=0;</span><br><span class="line">&#125;</span><br><span class="line">void Add()</span><br><span class="line">&#123;</span><br><span class="line">scanf(&quot;%s&quot;,s);</span><br><span class="line">int len=strlen(s),pre=0;</span><br><span class="line">for(int i=0;i&lt;len;i++)</span><br><span class="line">&#123;</span><br><span class="line">if(!son[pre][s[i]-&apos;a&apos;])</span><br><span class="line">  init(son[pre][s[i]-&apos;a&apos;]=++tot);</span><br><span class="line">pre=son[pre][s[i]-&apos;a&apos;];</span><br><span class="line">&#125;</span><br><span class="line">end[pre]++;</span><br><span class="line">&#125;</span><br><span class="line">void Build()</span><br><span class="line">&#123;</span><br><span class="line">Q.push(0);</span><br><span class="line">while(!Q.empty())</span><br><span class="line">&#123;</span><br><span class="line">int x=Q.front();Q.pop();</span><br><span class="line">for(int i=0;i&lt;26;i++)</span><br><span class="line">&#123;</span><br><span class="line">if(son[x][i])</span><br><span class="line">&#123;</span><br><span class="line">Q.push(son[x][i]);</span><br><span class="line">fail[son[x][i]]=x?son[fail[x]][i]:0;</span><br><span class="line">&#125;</span><br><span class="line">else son[x][i]=x?son[fail[x]][i]:0;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">int Calc()</span><br><span class="line">&#123;</span><br><span class="line">scanf(&quot;%s&quot;,s);</span><br><span class="line">int len=strlen(s),pre=0,ans=0;</span><br><span class="line">for(int i=0;i&lt;len;i++)</span><br><span class="line">&#123;</span><br><span class="line">pre=son[pre][s[i]-&apos;a&apos;];</span><br><span class="line">for(int j=pre;j;j=fail[j])</span><br><span class="line">  ans+=end[j],end[j]=0;</span><br><span class="line">&#125;</span><br><span class="line">return ans;</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">scanf(&quot;%d&quot;,&amp;T);</span><br><span class="line">while(T--)</span><br><span class="line">&#123;</span><br><span class="line">init(tot=0);</span><br><span class="line">for(scanf(&quot;%d&quot;,&amp;n);n;n--) Add();</span><br><span class="line">Build();</span><br><span class="line">printf(&quot;%d\n&quot;,Calc());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="数学"><a href="#数学" class="headerlink" title="数学"></a>数学</h2><h3 id="数论"><a href="#数论" class="headerlink" title="数论"></a>数论</h3><h4 id="快速幂"><a href="#快速幂" class="headerlink" title="快速幂"></a>快速幂</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">int power(int a,int b,int P)</span><br><span class="line">&#123;</span><br><span class="line">int re=1;</span><br><span class="line">for(;b;b&gt;&gt;=1,a=(long long)a*a%P)</span><br><span class="line">if(b&amp;1) re=(long long)re*a%P;</span><br><span class="line">return re;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="exgcd"><a href="#exgcd" class="headerlink" title="exgcd"></a>exgcd</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;cstdio&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int a,b,c,d,x,y;</span><br><span class="line">void exgcd(int a,int b,int &amp;d,int &amp;x,int &amp;y)</span><br><span class="line">&#123;</span><br><span class="line">if(!b) d=a,x=1,y=0;</span><br><span class="line">else exgcd(b,a%b,d,y,x),y-=a/b*x;</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">scanf(&quot;%d%d%d&quot;,&amp;a,&amp;b,&amp;c);</span><br><span class="line">exgcd(a,b,d,x,y);</span><br><span class="line">if(!(c%d))</span><br><span class="line">&#123;</span><br><span class="line">x*=c/d;y*=c/d;a/=d;b/=d;</span><br><span class="line">for(int k=-2;k&lt;=2;k++)</span><br><span class="line">printf(&quot;%d %d\n&quot;,x+k*b,y-k*a);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="BM"><a href="#BM" class="headerlink" title="BM"></a>BM</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;bits/stdc++.h&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">#define rep(i,a,n) for (int i=a;i&lt;n;i++)</span><br><span class="line">#define per(i,a,n) for (int i=n-1;i&gt;=a;i--)</span><br><span class="line">#define pb push_back</span><br><span class="line">#define mp make_pair</span><br><span class="line">#define all(x) (x).begin(),(x).end()</span><br><span class="line">#define fi first</span><br><span class="line">#define se second</span><br><span class="line">#define SZ(x) ((int)(x).size())</span><br><span class="line">typedef vector&lt;int&gt; VI;</span><br><span class="line">typedef long long ll;</span><br><span class="line">typedef pair&lt;int,int&gt; PII;</span><br><span class="line">const ll mod=1000000007;</span><br><span class="line">ll powmod(ll a,ll b) &#123;ll res=1;a%=mod; assert(b&gt;=0); for(;b;b&gt;&gt;=1)&#123;if(b&amp;1)res=res*a%mod;a=a*a%mod;&#125;return res;&#125;</span><br><span class="line">ll _,n;</span><br><span class="line">namespace linear_seq&#123;</span><br><span class="line">    const int N=10010;</span><br><span class="line">    ll res[N],base[N],_c[N],_md[N];</span><br><span class="line">    vector&lt;ll&gt; Md;</span><br><span class="line">    void mul(ll *a,ll *b,int k)</span><br><span class="line">    &#123;</span><br><span class="line">        rep(i,0,k+k) _c[i]=0;</span><br><span class="line">        rep(i,0,k) if (a[i]) rep(j,0,k) _c[i+j]=(_c[i+j]+a[i]*b[j])%mod;</span><br><span class="line">        for (int i=k+k-1;i&gt;=k;i--) if (_c[i])</span><br><span class="line">            rep(j,0,SZ(Md)) _c[i-k+Md[j]]=(_c[i-k+Md[j]]-_c[i]*_md[Md[j]])%mod;</span><br><span class="line">        rep(i,0,k) a[i]=_c[i];</span><br><span class="line">    &#125;</span><br><span class="line">    int solve(ll n,VI a,VI b)</span><br><span class="line">    &#123;</span><br><span class="line">        ll ans=0,pnt=0;</span><br><span class="line">        int k=SZ(a);</span><br><span class="line">        assert(SZ(a)==SZ(b));</span><br><span class="line">        rep(i,0,k) _md[k-1-i]=-a[i];_md[k]=1;</span><br><span class="line">        Md.clear();</span><br><span class="line">        rep(i,0,k) if (_md[i]!=0) Md.push_back(i);</span><br><span class="line">        rep(i,0,k) res[i]=base[i]=0;</span><br><span class="line">        res[0]=1;</span><br><span class="line">        while ((1ll&lt;&lt;pnt)&lt;=n) pnt++;</span><br><span class="line">        for (int p=pnt;p&gt;=0;p--)</span><br><span class="line">        &#123;</span><br><span class="line">            mul(res,res,k);</span><br><span class="line">            if ((n&gt;&gt;p)&amp;1)</span><br><span class="line">            &#123;</span><br><span class="line">                for (int i=k-1;i&gt;=0;i--) res[i+1]=res[i];res[0]=0;</span><br><span class="line">                rep(j,0,SZ(Md)) res[Md[j]]=(res[Md[j]]-res[k]*_md[Md[j]])%mod;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        rep(i,0,k) ans=(ans+res[i]*b[i])%mod;</span><br><span class="line">        if (ans&lt;0) ans+=mod;</span><br><span class="line">        return ans;</span><br><span class="line">    &#125;</span><br><span class="line">    VI BM(VI s) &#123;</span><br><span class="line">        VI C(1,1),B(1,1);</span><br><span class="line">        int L=0,m=1,b=1;</span><br><span class="line">        rep(n,0,SZ(s)) &#123;</span><br><span class="line">            ll d=0;</span><br><span class="line">            rep(i,0,L+1) d=(d+(ll)C[i]*s[n-i])%mod;</span><br><span class="line">            if (d==0) ++m;</span><br><span class="line">           else if (2*L&lt;=n) &#123;</span><br><span class="line">                VI T=C;</span><br><span class="line">                ll c=mod-d*powmod(b,mod-2)%mod;</span><br><span class="line">                while (SZ(C)&lt;SZ(B)+m) C.pb(0);</span><br><span class="line">                rep(i,0,SZ(B)) C[i+m]=(C[i+m]+c*B[i])%mod;</span><br><span class="line">                L=n+1-L; B=T; b=d; m=1;</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                ll c=mod-d*powmod(b,mod-2)%mod;</span><br><span class="line">                while (SZ(C)&lt;SZ(B)+m) C.pb(0);</span><br><span class="line">                rep(i,0,SZ(B)) C[i+m]=(C[i+m]+c*B[i])%mod;</span><br><span class="line">                ++m;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return C;</span><br><span class="line">    &#125;</span><br><span class="line">    int gao(VI a,ll n)&#123;</span><br><span class="line">        VI c=BM(a);</span><br><span class="line">        c.erase(c.begin());</span><br><span class="line">        rep(i,0,SZ(c)) c[i]=(mod-c[i])%mod;</span><br><span class="line">        return solve(n,c,VI(a.begin(),a.begin()+SZ(c)));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int t;</span><br><span class="line">    scanf(&quot;%d&quot;,&amp;t);</span><br><span class="line">    while(t--)</span><br><span class="line">    &#123;</span><br><span class="line">      scanf(&quot;%lld&quot;,&amp;n);</span><br><span class="line">        vector&lt;int&gt;v;</span><br><span class="line">        v.push_back(1);//至少8项，越多越好。 </span><br><span class="line">v.push_back(5);</span><br><span class="line">v.push_back(15);</span><br><span class="line">v.push_back(35);</span><br><span class="line">v.push_back(70);</span><br><span class="line">v.push_back(126);</span><br><span class="line">v.push_back(210);</span><br><span class="line">v.push_back(330);</span><br><span class="line">v.push_back(495);</span><br><span class="line">v.push_back(715);</span><br><span class="line">        printf(&quot;%lld\n&quot;,linear_seq::gao(v,n-1)%mod);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="组合数学"><a href="#组合数学" class="headerlink" title="组合数学"></a>组合数学</h3><h3 id="计算数学"><a href="#计算数学" class="headerlink" title="计算数学"></a>计算数学</h3><h4 id="凸包"><a href="#凸包" class="headerlink" title="凸包"></a>凸包</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;algorithm&gt;</span><br><span class="line">#include &lt;cstdio&gt;</span><br><span class="line">#include &lt;cmath&gt;</span><br><span class="line">const int N=1e5+5;</span><br><span class="line">const double eps=1e-6;</span><br><span class="line">int n,top;</span><br><span class="line">double len,S;</span><br><span class="line">struct Point &#123; double x,y; &#125; a[N],b[N];</span><br><span class="line">double dis(Point x,Point y)</span><br><span class="line">&#123;</span><br><span class="line">return sqrt((x.x-y.x)*(x.x-y.x)+(x.y-y.y)*(x.y-y.y));</span><br><span class="line">&#125;</span><br><span class="line">double Cross(Point x,Point y,Point z)</span><br><span class="line">&#123;</span><br><span class="line">return (x.x-z.x)*(y.y-z.y)-(x.y-z.y)*(y.x-z.x);</span><br><span class="line">&#125;</span><br><span class="line">double Cross(Point x,Point y)</span><br><span class="line">&#123;</span><br><span class="line">return x.x*y.y-x.y*y.x;</span><br><span class="line">&#125;</span><br><span class="line">bool cmp(const Point &amp;x,const Point &amp;y)</span><br><span class="line">&#123;</span><br><span class="line">double t=Cross(x,y,a[1]);return abs(t)&gt;eps?t&gt;0:dis(a[1],x)&lt;dis(a[1],y);</span><br><span class="line">&#125;</span><br><span class="line">inline void Graham()</span><br><span class="line">&#123;</span><br><span class="line">int t=1;</span><br><span class="line">for(int i=2;i&lt;=n;i++)</span><br><span class="line">  if(a[i].x&lt;a[t].x||(a[i].x==a[t].x&amp;&amp;a[i].y&lt;a[t].y)) t=i;</span><br><span class="line">if(t!=1) std::swap(a[t],a[1]);</span><br><span class="line">std::sort(a+2,a+n+1,cmp);</span><br><span class="line">for(int i=1;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">while(top&gt;1&amp;&amp;Cross(a[i],b[top],b[top-1])&gt;=0) top--;</span><br><span class="line">b[++top]=a[i];</span><br><span class="line">&#125;</span><br><span class="line">b[top+1]=b[1];</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">scanf(&quot;%d&quot;,&amp;n);</span><br><span class="line">for(int i=1;i&lt;=n;i++) scanf(&quot;%lf%lf&quot;,&amp;a[i].x,&amp;a[i].y);</span><br><span class="line">Graham();//求凸包的点 </span><br><span class="line">for(int i=1;i&lt;=top;i++) len+=dis(b[i],b[i+1]);</span><br><span class="line">printf(&quot;L: %.8lf\n&quot;,len);//求凸包的长度 </span><br><span class="line">for(int i=1;i&lt;=top;i++) S+=Cross(b[i],b[i+1]);</span><br><span class="line">printf(&quot;S: %.8lf\n&quot;,S/2);//求凸包的面积 </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="点旋转"><a href="#点旋转" class="headerlink" title="点旋转"></a>点旋转</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">假设对图片上任意点(x,y)，绕一个坐标点(rx0,ry0)逆时针旋转a角度后的新的坐标设为(x0, y0)，有公式：</span><br><span class="line">    x0= (x - rx0)*cos(a) - (y - ry0)*sin(a) + rx0 ;</span><br><span class="line">    y0= (x - rx0)*sin(a) + (y - ry0)*cos(a) + ry0 ;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;数据结构&quot;&gt;&lt;a href=&quot;#数据结构&quot; class=&quot;headerlink&quot; title=&quot;数据结构&quot;&gt;&lt;/a&gt;数据结构&lt;/h2&gt;&lt;h3 id=&quot;线段树&quot;&gt;&lt;a href=&quot;#线段树&quot; class=&quot;headerlink&quot; title=&quot;线段树&quot;&gt;&lt;/a&gt;线段
      
    
    </summary>
    
    
      <category term="模板" scheme="http://yoursite.com/tags/%E6%A8%A1%E6%9D%BF/"/>
    
  </entry>
  
  <entry>
    <title>kunagbin专题一 kmp</title>
    <link href="http://yoursite.com/2019/01/26/kunagbin%E4%B8%93%E9%A2%98%E4%B8%80-kmp/"/>
    <id>http://yoursite.com/2019/01/26/kunagbin专题一-kmp/</id>
    <published>2019-01-26T14:11:53.000Z</published>
    <updated>2019-01-27T13:13:38.758Z</updated>
    
    <content type="html"><![CDATA[<table><thead><tr><th>A</th><th>B</th><th>C</th><th>D</th><th>E</th><th>F</th><th>G</th><th>H</th><th>I</th><th>J</th><th>K</th><th>L</th><th>M</th><th>N</th><th>O</th><th>P</th></tr></thead><tbody><tr><td>√</td><td>√</td><td>√</td><td>√</td><td>√</td><td>√</td><td>√</td><td>√</td><td>√</td><td></td><td></td><td></td><td>√</td><td></td><td></td><td></td></tr></tbody></table><a id="more"></a><h2 id="A-Oulipo"><a href="#A-Oulipo" class="headerlink" title="A - Oulipo"></a><a href="https://vjudge.net/contest/278481#problem/A" target="_blank" rel="noopener">A - Oulipo</a></h2><p>简单kmp板子题，求母串里有几个子串</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;cstring&gt;</span><br><span class="line">#include&lt;cstdio&gt;</span><br><span class="line">int n,m,next[1000001];</span><br><span class="line">long long int sum;</span><br><span class="line">char a[1000001],b[1000001];</span><br><span class="line">void Getnext()</span><br><span class="line">&#123;</span><br><span class="line">next[0]=-1;</span><br><span class="line">for(int i=1,j=0;i&lt;m;i++,j++)</span><br><span class="line">&#123;</span><br><span class="line">while(j!=-1&amp;&amp;b[i]!=b[j]) j=next[j];//j取-1只是为了判断边界，就如果j为0的话会一直循环下去 </span><br><span class="line">next[i+1]=j+1;//匹配到第i+1个时，从第i个开始匹配，例如abcabcd 与 abcabce第3个匹配不上，但是前两个匹配得上</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">void KMP()</span><br><span class="line">&#123;</span><br><span class="line">for(int i=0,j=0;i&lt;n;i++,j++)</span><br><span class="line">&#123;</span><br><span class="line">while(j!=-1&amp;&amp;a[i]!=b[j]) j=next[j];</span><br><span class="line">if(j==m-1) sum++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">int t;</span><br><span class="line">scanf(&quot;%d&quot;,&amp;t);</span><br><span class="line">while(t--)</span><br><span class="line">&#123;</span><br><span class="line">sum=0;</span><br><span class="line">memset(next,0,sizeof(next));</span><br><span class="line">scanf(&quot;%s%s&quot;,b,a); //a-&gt;long b-&gt;short</span><br><span class="line">n=strlen(a);m=strlen(b);</span><br><span class="line">Getnext(); </span><br><span class="line">KMP();</span><br><span class="line">printf(&quot;%lld\n&quot;,sum);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="B-Number-Sequence"><a href="#B-Number-Sequence" class="headerlink" title="B - Number Sequence"></a><a href="https://vjudge.net/contest/278481#problem/B" target="_blank" rel="noopener">B - Number Sequence</a></h2><p>子字符串在母串的位置，板子题</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;cstring&gt;</span><br><span class="line">#include&lt;cstdio&gt;</span><br><span class="line">int n,m,next[1000001];</span><br><span class="line">long long int sum;</span><br><span class="line">int a[1000001],b[1000001];</span><br><span class="line">void Getnext()</span><br><span class="line">&#123;</span><br><span class="line">next[0]=-1;</span><br><span class="line">for(int i=1,j=0;i&lt;m;i++,j++)</span><br><span class="line">&#123;</span><br><span class="line">while(j!=-1&amp;&amp;b[i]!=b[j]) j=next[j];//j取-1只是为了判断边界，就如果j为0的话会一直循环下去 </span><br><span class="line">next[i+1]=j+1;//匹配到第i+1个时，从第i个开始匹配，例如abcabcd 与 abcabce第3个匹配不上，但是前两个匹配得上</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">void KMP()</span><br><span class="line">&#123;</span><br><span class="line">for(int i=0,j=0;i&lt;n;i++,j++)</span><br><span class="line">&#123;</span><br><span class="line">while(j!=-1&amp;&amp;a[i]!=b[j]) j=next[j];</span><br><span class="line">if(j==m-1)</span><br><span class="line">&#123;</span><br><span class="line"> sum=i-j+1;</span><br><span class="line">return;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">int t;</span><br><span class="line">scanf(&quot;%d&quot;,&amp;t);</span><br><span class="line">while(t--)</span><br><span class="line">&#123;</span><br><span class="line">sum=0;</span><br><span class="line">int i;</span><br><span class="line">memset(next,0,sizeof(next));</span><br><span class="line">scanf(&quot;%d%d&quot;,&amp;n,&amp;m);</span><br><span class="line">for(i=0;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line">scanf(&quot;%d&quot;,&amp;a[i]);</span><br><span class="line">&#125;</span><br><span class="line">for(i=0;i&lt;m;i++)</span><br><span class="line">&#123;</span><br><span class="line">scanf(&quot;%d&quot;,&amp;b[i]);</span><br><span class="line">&#125;</span><br><span class="line">Getnext(); </span><br><span class="line">KMP();</span><br><span class="line">if(sum==0)</span><br><span class="line">sum=-1;</span><br><span class="line">printf(&quot;%lld\n&quot;,sum);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="C-Period"><a href="#C-Period" class="headerlink" title="C - Period"></a><a href="https://vjudge.net/contest/278481#problem/C" target="_blank" rel="noopener">C - Period</a></h2><p>当前位循环节的个数，也是板子题，next数组的应用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;cstring&gt;</span><br><span class="line">#include&lt;cstdio&gt;</span><br><span class="line">int n,m,next[1000001];</span><br><span class="line">long long int sum;</span><br><span class="line">char b[1000001];</span><br><span class="line">void Getnext()</span><br><span class="line">&#123;</span><br><span class="line">next[0]=-1;</span><br><span class="line">for(int i=1,j=0;i&lt;m;i++,j++)</span><br><span class="line">&#123;</span><br><span class="line">while(j!=-1&amp;&amp;b[i]!=b[j]) j=next[j];</span><br><span class="line">next[i+1]=j+1;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">int t,i;</span><br><span class="line">for(t=1;;t++)</span><br><span class="line">&#123;</span><br><span class="line">memset(next,0,sizeof(next));</span><br><span class="line">scanf(&quot;%d&quot;,&amp;m);</span><br><span class="line">if(m==0)</span><br><span class="line">break;</span><br><span class="line">scanf(&quot;%s&quot;,b);</span><br><span class="line">printf(&quot;Test case #%d\n&quot;,t);</span><br><span class="line">Getnext();</span><br><span class="line">for(i=1;i&lt;=m;i++)</span><br><span class="line">&#123;</span><br><span class="line">if(next[i]&gt;0)</span><br><span class="line">&#123;</span><br><span class="line">if(i%(i-next[i])==0)</span><br><span class="line">&#123;</span><br><span class="line">printf(&quot;%d %d\n&quot;,i,i/(i-next[i]));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">printf(&quot;\n&quot;);</span><br><span class="line">&#125;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="D-Power-Strings"><a href="#D-Power-Strings" class="headerlink" title="D - Power Strings"></a><a href="https://vjudge.net/contest/278481#problem/D" target="_blank" rel="noopener">D - Power Strings</a></h2><p>和c差不多，仍然是求循环节的个数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;cstring&gt;</span><br><span class="line">#include&lt;cstdio&gt;</span><br><span class="line">int n,m,next[1000001];</span><br><span class="line">long long int sum;</span><br><span class="line">char b[1000001];</span><br><span class="line">void Getnext()</span><br><span class="line">&#123;</span><br><span class="line">next[0]=-1;</span><br><span class="line">for(int i=1,j=0;i&lt;m;i++,j++)</span><br><span class="line">&#123;</span><br><span class="line">while(j!=-1&amp;&amp;b[i]!=b[j]) j=next[j];</span><br><span class="line">next[i+1]=j+1;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">while(1)</span><br><span class="line">&#123;</span><br><span class="line">int i;</span><br><span class="line">memset(next,0,sizeof(next));</span><br><span class="line">scanf(&quot;%s&quot;,b);</span><br><span class="line">m=strlen(b);</span><br><span class="line">if(b[0]==&apos;.&apos;&amp;&amp;m==1)</span><br><span class="line">break;</span><br><span class="line">Getnext();</span><br><span class="line">if(m%(m-next[m])==0)</span><br><span class="line">&#123;</span><br><span class="line">printf(&quot;%d\n&quot;,m/(m-next[m]));</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">printf(&quot;1\n&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="E-Count-the-string"><a href="#E-Count-the-string" class="headerlink" title="E - Count the string"></a><a href="https://vjudge.net/contest/278481#problem/E" target="_blank" rel="noopener">E - Count the string</a></h2><p>子串在母串的个数和，还是偏板子的思维题。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;cstring&gt;</span><br><span class="line">#include&lt;cstdio&gt;</span><br><span class="line">int n,m,next[1000001];</span><br><span class="line">int men[1000001];</span><br><span class="line">long long int sum;</span><br><span class="line">char b[1000001];</span><br><span class="line">void Getnext()</span><br><span class="line">&#123;</span><br><span class="line">next[0]=-1;</span><br><span class="line">for(int i=1,j=0;i&lt;m;i++,j++)</span><br><span class="line">&#123;</span><br><span class="line">while(j!=-1&amp;&amp;b[i]!=b[j]) j=next[j];</span><br><span class="line">next[i+1]=j+1;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">int t,i;</span><br><span class="line">scanf(&quot;%d&quot;,&amp;t);</span><br><span class="line">while(t--)</span><br><span class="line">&#123;</span><br><span class="line">sum=0;</span><br><span class="line">scanf(&quot;%d&quot;,&amp;m);</span><br><span class="line">scanf(&quot;%s&quot;,b);</span><br><span class="line">Getnext();</span><br><span class="line">for(i=1;i&lt;=m;i++)</span><br><span class="line">&#123;</span><br><span class="line">//printf(&quot;%d &quot;,next[i]);</span><br><span class="line">if(next[i]&gt;0)</span><br><span class="line">sum++;</span><br><span class="line">&#125;</span><br><span class="line">printf(&quot;%lld\n&quot;,(sum+m)%10007); </span><br><span class="line">&#125;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="F-Cyclic-Nacklace"><a href="#F-Cyclic-Nacklace" class="headerlink" title="F - Cyclic Nacklace"></a><a href="https://vjudge.net/contest/278481#problem/F" target="_blank" rel="noopener">F - Cyclic Nacklace</a></h2><p>在后面添加几个可以让当前字符串构成循环，注意最后一位。next数组的利用。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">#include&lt;string.h&gt;</span><br><span class="line">int next[100005],m;</span><br><span class="line">char b[100005];</span><br><span class="line">void getnext()</span><br><span class="line">&#123;</span><br><span class="line">next[0]=-1;</span><br><span class="line">for(int i=1,j=0;i&lt;m;i++,j++)</span><br><span class="line">&#123;</span><br><span class="line">while(b[i]!=b[j]&amp;&amp;j!=-1) j=next[j];</span><br><span class="line">next[i+1]=j+1;</span><br><span class="line">&#125;</span><br><span class="line">return;</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">int t;</span><br><span class="line">scanf(&quot;%d&quot;,&amp;t);</span><br><span class="line">while(t--)</span><br><span class="line">&#123;</span><br><span class="line">memset(next,0,sizeof(next));</span><br><span class="line">scanf(&quot;%s&quot;,b);</span><br><span class="line">m=strlen(b);</span><br><span class="line">getnext();</span><br><span class="line">if(m%(m-next[m])==0&amp;&amp;next[m]!=0)</span><br><span class="line">&#123;</span><br><span class="line">printf(&quot;0\n&quot;);</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">int men=m-next[m];</span><br><span class="line">int j=next[m]%men;</span><br><span class="line">printf(&quot;%d\n&quot;,men-j);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">return 0;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h2 id="G-Simpsons’-Hidden-Talents"><a href="#G-Simpsons’-Hidden-Talents" class="headerlink" title="G - Simpsons’ Hidden Talents"></a><a href="https://vjudge.net/contest/278481#problem/G" target="_blank" rel="noopener">G - Simpsons’ Hidden Talents</a></h2><p>最长前后缀,kmp一次就行。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">#include&lt;string.h&gt;</span><br><span class="line">int next[1000005],m,n,sum;</span><br><span class="line">char b[1000005],a[1000005];</span><br><span class="line">void getnext()</span><br><span class="line">&#123;</span><br><span class="line">next[0]=-1;</span><br><span class="line">for(int i=1,j=0;i&lt;m;i++,j++)</span><br><span class="line">&#123;</span><br><span class="line">while(b[i]!=b[j]&amp;&amp;j!=-1) j=next[j];</span><br><span class="line">next[i+1]=j+1;</span><br><span class="line">&#125;</span><br><span class="line">return;</span><br><span class="line">&#125;</span><br><span class="line">void KMP()</span><br><span class="line">&#123;</span><br><span class="line">for(int i=0,j=0;i&lt;n;i++,j++)</span><br><span class="line">&#123;</span><br><span class="line">while(j!=-1&amp;&amp;a[i]!=b[j])j=next[j];</span><br><span class="line">sum=j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">while(scanf(&quot;%s%s&quot;,b,a)!=EOF)</span><br><span class="line">&#123;</span><br><span class="line">sum=0;</span><br><span class="line">memset(next,0,sizeof(next));</span><br><span class="line">n=strlen(a);</span><br><span class="line">m=strlen(b);</span><br><span class="line">getnext();</span><br><span class="line">KMP();</span><br><span class="line">for(int i=0;i&lt;=sum;i++)</span><br><span class="line">printf(&quot;%c&quot;,b[i]);</span><br><span class="line">if(sum&gt;-1)</span><br><span class="line">printf(&quot; %d\n&quot;,sum+1);</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">printf(&quot;%d\n&quot;,sum+1);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">return 0;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h2 id="H-Milking-Grid"><a href="#H-Milking-Grid" class="headerlink" title="H - Milking Grid"></a><a href="https://vjudge.net/contest/278481#problem/H" target="_blank" rel="noopener">H - Milking Grid</a></h2><p>求最小覆盖问题，就横竖两次遍历的next数组的应用，然后求他们循环节的最大公倍数，注意，不能超过m,n。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">#include&lt;string.h&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">char a[10005][100];</span><br><span class="line">long long int next[10005];</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">long long int qum=1,sum=1;</span><br><span class="line">long long int i,j,m,n;</span><br><span class="line">scanf(&quot;%lld%lld&quot;,&amp;n,&amp;m);</span><br><span class="line">for(i=0;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line">for(j=0;j&lt;m;j++)</span><br><span class="line">&#123;</span><br><span class="line">scanf(&quot; %c&quot;,&amp;a[i][j]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">for(i=0;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line">memset(next,0,sizeof(next));</span><br><span class="line">next[0]=-1;</span><br><span class="line">for(int ii=1,j=0;ii&lt;m;ii++,j++)</span><br><span class="line">&#123;</span><br><span class="line">while(a[i][ii]!=a[i][j]&amp;&amp;j!=-1) j=next[j];</span><br><span class="line">next[ii+1]=j+1;</span><br><span class="line">&#125;</span><br><span class="line">sum=((sum/__gcd(sum,(m-next[m])))*((m-next[m])));</span><br><span class="line">if(sum&gt;m)</span><br><span class="line">sum=m;</span><br><span class="line">&#125;</span><br><span class="line">for(i=0;i&lt;m;i++)</span><br><span class="line">&#123;</span><br><span class="line">memset(next,0,sizeof(next));</span><br><span class="line">next[0]=-1;</span><br><span class="line">for(int ii=1,j=0;ii&lt;n;ii++,j++)</span><br><span class="line">&#123;</span><br><span class="line">while(a[ii][i]!=a[j][i]&amp;&amp;j!=-1) j=next[j];</span><br><span class="line">next[ii+1]=j+1;</span><br><span class="line">&#125;</span><br><span class="line">qum=((qum/__gcd(qum,(n-next[n])))*(n-next[n]));</span><br><span class="line">if(qum&gt;n)</span><br><span class="line">qum=n;</span><br><span class="line">&#125;</span><br><span class="line">printf(&quot;%lld\n&quot;,sum*qum);</span><br><span class="line">return 0;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h2 id="I-Theme-Section"><a href="#I-Theme-Section" class="headerlink" title="I - Theme Section"></a><a href="https://vjudge.net/contest/278481#problem/I" target="_blank" rel="noopener">I - Theme Section</a></h2><p>使输入的字符串满足EAEBE格式的最长E串，next数组的利用，我们可以认为最长为n=next[m]（该字符串的前后缀长度）E（AEB）E，然后从头到尾找是否还有子串满足前后缀长度为n,即找满足EAE格式。如果找不到n–，一直到找到或者n为0</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">#include&lt;string.h&gt;</span><br><span class="line">int next[1000005];</span><br><span class="line">char a[1000005];</span><br><span class="line">int m;</span><br><span class="line">void Getnext()</span><br><span class="line">&#123;</span><br><span class="line">int i,j;</span><br><span class="line">next[0]=-1;</span><br><span class="line">for(int i=1,j=0;i&lt;m;i++,j++)</span><br><span class="line">&#123;</span><br><span class="line">while(j!=-1&amp;&amp;a[i]!=a[j]) j=next[j];</span><br><span class="line">next[i+1]=j+1;</span><br><span class="line">&#125;</span><br><span class="line">return;</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">int i,j,n,t;</span><br><span class="line">scanf(&quot;%d&quot;,&amp;t);</span><br><span class="line">while(t--)</span><br><span class="line">&#123;</span><br><span class="line">scanf(&quot;%s&quot;,a);</span><br><span class="line">m=strlen(a);</span><br><span class="line">Getnext();</span><br><span class="line">n=next[m];</span><br><span class="line">for(i=n;i&gt;=0;i--)</span><br><span class="line">&#123;</span><br><span class="line">for(j=1;j&lt;=m;j++)</span><br><span class="line">&#123;</span><br><span class="line">if(next[j]==i)</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line">if(j&lt;m)</span><br><span class="line">&#123;</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">printf(&quot;%d\n&quot;,i);</span><br><span class="line">&#125;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="M-Substring-Frequency"><a href="#M-Substring-Frequency" class="headerlink" title="M - Substring Frequency"></a><a href="https://vjudge.net/contest/278481#problem/M" target="_blank" rel="noopener">M - Substring Frequency</a></h2><p>板子题，子串在母串出现了几次。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">#include&lt;string.h&gt;</span><br><span class="line">int next[1000005];</span><br><span class="line">char a[1000005];</span><br><span class="line">int m;</span><br><span class="line">void Getnext()</span><br><span class="line">&#123;</span><br><span class="line">int i,j;</span><br><span class="line">next[0]=-1;</span><br><span class="line">for(int i=1,j=0;i&lt;m;i++,j++)</span><br><span class="line">&#123;</span><br><span class="line">while(j!=-1&amp;&amp;a[i]!=a[j]) j=next[j];</span><br><span class="line">next[i+1]=j+1;</span><br><span class="line">&#125;</span><br><span class="line">return;</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">int i,j,n,t;</span><br><span class="line">scanf(&quot;%d&quot;,&amp;t);</span><br><span class="line">while(t--)</span><br><span class="line">&#123;</span><br><span class="line">scanf(&quot;%s&quot;,a);</span><br><span class="line">m=strlen(a);</span><br><span class="line">Getnext();</span><br><span class="line">n=next[m];</span><br><span class="line">for(i=n;i&gt;=0;i--)</span><br><span class="line">&#123;</span><br><span class="line">for(j=1;j&lt;=m;j++)</span><br><span class="line">&#123;</span><br><span class="line">if(next[j]==i)</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line">if(j&lt;m)</span><br><span class="line">&#123;</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">printf(&quot;%d\n&quot;,i);</span><br><span class="line">&#125;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;A&lt;/th&gt;
&lt;th&gt;B&lt;/th&gt;
&lt;th&gt;C&lt;/th&gt;
&lt;th&gt;D&lt;/th&gt;
&lt;th&gt;E&lt;/th&gt;
&lt;th&gt;F&lt;/th&gt;
&lt;th&gt;G&lt;/th&gt;
&lt;th&gt;H&lt;/th&gt;
&lt;th&gt;I&lt;/th&gt;
&lt;th&gt;J&lt;/th&gt;
&lt;th&gt;K&lt;/th&gt;
&lt;th&gt;L&lt;/th&gt;
&lt;th&gt;M&lt;/th&gt;
&lt;th&gt;N&lt;/th&gt;
&lt;th&gt;O&lt;/th&gt;
&lt;th&gt;P&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;√&lt;/td&gt;
&lt;td&gt;√&lt;/td&gt;
&lt;td&gt;√&lt;/td&gt;
&lt;td&gt;√&lt;/td&gt;
&lt;td&gt;√&lt;/td&gt;
&lt;td&gt;√&lt;/td&gt;
&lt;td&gt;√&lt;/td&gt;
&lt;td&gt;√&lt;/td&gt;
&lt;td&gt;√&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;√&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
    
    </summary>
    
      <category term="VJ" scheme="http://yoursite.com/categories/VJ/"/>
    
    
      <category term="kmp" scheme="http://yoursite.com/tags/kmp/"/>
    
  </entry>
  
  <entry>
    <title>codeforces 534D</title>
    <link href="http://yoursite.com/2019/01/25/codeforces-534D/"/>
    <id>http://yoursite.com/2019/01/25/codeforces-534D/</id>
    <published>2019-01-24T16:18:31.000Z</published>
    <updated>2019-01-27T13:14:37.819Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://codeforces.com/contest/1104/problem/D" target="_blank" rel="noopener">D. Game with modulo</a><br>  分块二分，首先0到1询问，如果返回为x则证明a为1，然后询问（1，2）（2，4）（4，8）……（1e9,2e9)，如果返回为x则证明a在该区间，对区间进行二分查询。<br>  最开始想的是直接1到2e9进行二分，发现会超过60次。<br><a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">long long int a[50],l,r,m;</span><br><span class="line">char f[100];</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">int i,j,n;</span><br><span class="line">a[0]=0;</span><br><span class="line">a[1]=1;</span><br><span class="line">for(i=2;i&lt;=32;i++)</span><br><span class="line">&#123;</span><br><span class="line">a[i]=a[i-1]*2;</span><br><span class="line">&#125;</span><br><span class="line">while(scanf(&quot; %s&quot;,f)!=EOF)</span><br><span class="line">&#123;</span><br><span class="line">if(f[0]!=&apos;s&apos;)</span><br><span class="line">break;</span><br><span class="line">char c;</span><br><span class="line">for(i=0;i&lt;=30;i++)</span><br><span class="line">&#123;</span><br><span class="line">printf(&quot;? %lld %lld\n&quot;,a[i],a[i+1]);</span><br><span class="line">fflush(stdout);</span><br><span class="line">scanf(&quot; %c&quot;,&amp;c);</span><br><span class="line">if(c==&apos;x&apos;)</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line">if(a[i]==0)</span><br><span class="line">&#123;</span><br><span class="line">printf(&quot;! 1\n&quot;);</span><br><span class="line">fflush(stdout);</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">l=a[i]+1,r=a[i+1];</span><br><span class="line">while(l&lt;r)</span><br><span class="line">&#123;</span><br><span class="line">m=(l+r)/2;</span><br><span class="line">printf(&quot;? %lld %lld\n&quot;,m,l-1);</span><br><span class="line">fflush(stdout);</span><br><span class="line">scanf(&quot; %c&quot;,&amp;c);</span><br><span class="line">if(c==&apos;x&apos;)</span><br><span class="line">l=m+1;</span><br><span class="line">else</span><br><span class="line">r=m;</span><br><span class="line">&#125;</span><br><span class="line">printf(&quot;! %lld\n&quot;,l);</span><br><span class="line">fflush(stdout);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">return 0;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://codeforces.com/contest/1104/problem/D&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;D. Game with modulo&lt;/a&gt;&lt;br&gt;  分块二分，首先0到1询问，如果返回为x则证明a为1，然后询问（1，2）（2，4）（4，8）……（1e9,2e9)，如果返回为x则证明a在该区间，对区间进行二分查询。&lt;br&gt;  最开始想的是直接1到2e9进行二分，发现会超过60次。&lt;br&gt;
    
    </summary>
    
      <category term="codeforces" scheme="http://yoursite.com/categories/codeforces/"/>
    
    
      <category term="codeforces" scheme="http://yoursite.com/tags/codeforces/"/>
    
      <category term="二分" scheme="http://yoursite.com/tags/%E4%BA%8C%E5%88%86/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2019/01/24/hello-world/"/>
    <id>http://yoursite.com/2019/01/24/hello-world/</id>
    <published>2019-01-24T14:50:51.803Z</published>
    <updated>2019-01-26T08:39:21.511Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.<br><a id="more"></a></p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
